function isMonotonic(array) {

	let i=0;
	
	if(array.length === 0 || array.length === 1){
		return true;
 	}
	 
	let decreasingCount = 0;
	let increasingCount = 0;
	let direction = null
	
	while(i < array.length - 1){
		
			if(array[i] === array[i+1]){
				// looks good no trend found keep looking
			}
			else if(direction === null){
				// no direction found yet. 
				if(array[i] < array[i+1]){
					direction = 'continuous_increasing';
				}else if(array[i] > array[i+1]){
					direction = 'continuous_decreasing';
				}
			}else if(direction){
				if(direction === 'continuous_increasing'){
					if(! (array[i] < array[i+1]) ){
						return false;
					}
				}
				else if(direction === 'continuous_decreasing'){
					if(! (array[i] > array[i+1]) ){
						return false;
					}				
				}
			}
			i += 1;
		}
		// montonic conditions
		// 1- array[i] === array[i+1]
		// find what the direction, continouous increasing or decreasing 
		// store direction
		// judge on the basis of the direction.
		// continuously increasing.. then monotonic
		// if there is deviation from direction then return false.
	
		/****
			In code structure like this it looks like we lay a 'trap' there 
			where loop looks for any deviation from the trend if there is any then 
			it returns false else if control safely escapes 'trap' then after 
			the loop it returns true.
		*/
	
	return true;
}


let arr = [-1, -5, -10, -1100, -1100, -1101, -1102, -1103];
let r = isMonotonic(arr);
console.log('isMonotonic : ', r );

arr = [2, 1];
r = isMonotonic(arr);
console.log('isMonotonic : ', r );

arr = [2, 1, 3];
r = isMonotonic(arr);
console.log('isMonotonic : ', r );
